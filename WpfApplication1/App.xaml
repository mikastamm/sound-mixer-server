<Application x:Class="SoundMixerServer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SoundMixerServer"
             StartupUri="MainWindow.xaml"
             Exit="Application_Exit">
    <Application.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <SolidColorBrush x:Key="MainBackground" Color="#FAFAFA"></SolidColorBrush>
        <SolidColorBrush x:Key="BackgroundLight" Color="#EDF2F6"></SolidColorBrush>
        <SolidColorBrush x:Key="BackgroundDark" Color="#354052"></SolidColorBrush>
        <SolidColorBrush x:Key="BackgroundMedium" Color="#6F7E95"></SolidColorBrush>
        <SolidColorBrush x:Key="OrangeLight" Color="#FFB878"></SolidColorBrush>
        <SolidColorBrush x:Key="Orange" Color="#FC6A23"></SolidColorBrush>
        <SolidColorBrush x:Key="ItemSelectedDark" Color="#2B3443"></SolidColorBrush>
        <SolidColorBrush x:Key="AccentBlue" Color="#007dff"></SolidColorBrush>
        <!---#00B5FE-->
        <SolidColorBrush x:Key="White" Color="#FFFFFF"></SolidColorBrush>
        <SolidColorBrush x:Key="TextSelected" Color="White"></SolidColorBrush>
        <SolidColorBrush x:Key="TextDeselected" Color="#BAC1CB"></SolidColorBrush>
        <SolidColorBrush x:Key="BackgroundTable" Color="#F0F1F6"></SolidColorBrush>
        <SolidColorBrush x:Key="BackgroundContent" Color="#DBD9EE"></SolidColorBrush>
        <SolidColorBrush x:Key="TextBoxHighlight" Color="Black"></SolidColorBrush>
        <SolidColorBrush x:Key="AccentButton" Color="#007dff"></SolidColorBrush>
        <SolidColorBrush x:Key="AccentDark" Color="#0063CC"></SolidColorBrush>
        <SolidColorBrush x:Key="AccentLight" Color="#3396FF"></SolidColorBrush>
        <Color x:Key="TextBoxHalfSelected" R="#00" G="#75" B="#A3"></Color>
        
        <Color x:Key="colorBackgroundMedium" R="#6F" G="#7E" B="#95" ></Color>
        <Color x:Key="colorAccentBlue" R="#00" G="#7d" B="#ff" ></Color>

        <Style TargetType="{x:Type Button}" x:Key="RoundedButtonPrimary">
            <Setter Property="Foreground" Value="{StaticResource BackgroundLight}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">


                        <Grid Height="27" UseLayoutRounding="True">
                            <Border BorderThickness="0"
        				    Padding="4,2" 
        				    BorderBrush="DarkGray" 
        				    CornerRadius="13" Background="{StaticResource BackgroundMedium}">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="3" />
                                </Border.RenderTransform>
                            </Border>

                            <Border Name="border" 
        				    BorderThickness="0"
        				    Padding="4,2" 
        				    BorderBrush="{StaticResource AccentLight}" 
        				    CornerRadius="13" 
        				    Background="{StaticResource AccentButton}">
                                <Grid >
                                    <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" Name="content"/>
                                </Grid>
                            </Border>
                        </Grid>


                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentLight}"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="1.0" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="True">

                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="RoundedButtonSecondary">
            <Setter Property="Foreground" Value="{StaticResource BackgroundDark}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">


                        <Grid Height="27" UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <Border BorderThickness="0"
        				    Padding="4,2" 
        				    BorderBrush="{StaticResource AccentButton}" 
        				    CornerRadius="13" Background="{StaticResource BackgroundMedium}">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="3" />
                                </Border.RenderTransform>
                            </Border>

                            <Border Name="border" 
        				    BorderThickness="1.5"
        				    Padding="4,2" 
        				    BorderBrush="{StaticResource AccentButton}" 
        				    CornerRadius="13" 
        				    Background="{StaticResource BackgroundLight}">
                                <Grid >
                                    <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" Name="content"/>
                                </Grid>
                            </Border>
                        </Grid>


                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="1.0" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="True">

                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="InsetTextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" ClipToBounds="True">
                                <Border Background="Transparent" BorderBrush="Black" 
                                 BorderThickness="1,1,0,0" Margin="-2">
                                    <Border.Effect>
                                        <DropShadowEffect Color="{StaticResource TextBoxHalfSelected}" ShadowDepth="0" Opacity="1" BlurRadius="4"></DropShadowEffect>
                                    </Border.Effect>
                                </Border>
                            </Border>
                            <TextBox Margin="3,3,0,0" TextWrapping="{TemplateBinding TextWrapping}" Width="{TemplateBinding Width}" Text="{TemplateBinding Text}" Height="{TemplateBinding Height}" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" 
                                     Foreground="{StaticResource BackgroundDark}" BorderThickness="0"></TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="InsetHardTextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" ClipToBounds="True">
                                <Border Background="Transparent" BorderBrush="Black" 
                                 BorderThickness="1,1,0,0" Margin="-2">
                                    <Border.Effect>
                                        <DropShadowEffect Color="{StaticResource TextBoxHalfSelected}" Direction="315" ShadowDepth="1.5" Opacity=".2" BlurRadius="0.1"></DropShadowEffect>
                                    </Border.Effect>
                                </Border>
                            </Border>
                            <TextBox Margin="3,3,0,0" TextWrapping="{TemplateBinding TextWrapping}" Width="{TemplateBinding Width}" Text="{TemplateBinding Text}" Height="{TemplateBinding Height}" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" 
                                     Foreground="{StaticResource BackgroundDark}" BorderThickness="0"></TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="MaterialTextBox">
            <Setter Property="BorderThickness" Value="0,0,0,1.5"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Foreground" Value="{StaticResource BackgroundDark}"></Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="#6F7E95" To="#0075A3" Duration="0:0:0.1" Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation From="#0075A3" To="#6F7E95" Duration="0:0:0.1" Storyboard.TargetProperty="BorderBrush.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush"  Value="{StaticResource TextBoxHighlight}" />
                    <!--TODO: Fix BorderBrush not working when Focused: http://stackoverflow.com/questions/36605387/wpf-textbox-border-style-trigger-isfocused-only-works-if-has-focus-but-not-keybo-->
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{Binding Foreground}"/>
            <Setter Property="Background" Value="{Binding Background}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnCheckingColor">
                                <ColorAnimation From="#6F7E95" To="#007dff" Duration="0:0:0.3" Storyboard.TargetName="background" Storyboard.TargetProperty="Background.Color"/>
                            </Storyboard>

                            <Storyboard x:Key="OnUncheckingColor">
                                <ColorAnimation From="#007dff" To="#6F7E95" Duration="0:0:0.3" Storyboard.TargetName="background" Storyboard.TargetProperty="Background.Color"/>
                            </Storyboard>
                            
                            <Storyboard x:Key="OnChecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="25">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnUnchecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1,1,1,1">
                                        <EasingThicknessKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </EasingThicknessKeyFrame.EasingFunction>
                                    </EasingThicknessKeyFrame>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <DockPanel x:Name="dockPanel">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                            <Border Width="50" Height="17" Margin="0,5,0,5" Background="{StaticResource BackgroundMedium}" CornerRadius="7" x:Name="background">
                                <Grid>
                                    <Border BorderBrush="{StaticResource BackgroundDark}" Background="{StaticResource BackgroundLight}" HorizontalAlignment="Left" x:Name="slider" Width="23" BorderThickness="1,1,1,1" CornerRadius="5" RenderTransformOrigin="0.5,0.5" Margin="1,1,1,1">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                    </Border>
                                </Grid>
                            </Border>
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                    <BeginStoryboard Storyboard="{StaticResource OnUncheckingColor}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                    <BeginStoryboard Storyboard="{StaticResource OnCheckingColor}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="ButtonSwitchLeft">

        </Style>



        <Style TargetType="Border" x:Key="BorderDGUpcomingHeader">
            <Setter Property="Height" Value="50" />
            <Setter Property="Background" Value="{StaticResource BackgroundDark}"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>

        <Style x:Key="ColumnHeaderHome" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="Background" Value="{StaticResource BackgroundMedium}"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{StaticResource BackgroundLight}" />
            <Setter Property="BorderBrush" Value="#FF8D9EB9"/>
            <Setter Property="BorderThickness" Value="1,0,1,0"/>
        </Style>


        <!--<Style x:Key="Segoe UI Emoji">
            <Setter Property="TextElement.FontFamily" Value="Resources/fonts/#Segoe UI Emoji" />
        </Style>-->

      
        <Style
        x:Key="ButtonFocusVisual">
            <Setter
            Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NoButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#00000000"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>

        <Style x:Key="CircularButton" TargetType="{x:Type Button}">
            <!--Not Impl-->
            <Setter Property="Background" Value="{Binding Background}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="#EEEEEEEE"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="OpacityMask" Value="#AA888888"/>
                                <Setter Property="Margin" Value="2 1" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" Value="0"/>
                                <!--<Setter Property="Background" Value="DimGray"/>-->
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MyFocusVisualStyte">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="FocusStyle" Background="#4433b4ed" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MyButtonDark" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        CornerRadius="1"
                        Background="{TemplateBinding Background}">

                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Gainsboro" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.25" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource BackgroundDark}"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextDeselected}"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ItemSelectedDark}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        
    </Application.Resources>
</Application>
